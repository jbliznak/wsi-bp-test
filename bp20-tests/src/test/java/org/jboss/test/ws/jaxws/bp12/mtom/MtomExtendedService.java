/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2013, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.jboss.test.ws.jaxws.bp12.mtom;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.8.0-SNAPSHOT (1451528)
 * 2013-05-27T17:04:11.623+08:00
 * Generated source version: 2.8.0-SNAPSHOT
 * 
 */
@WebServiceClient(name = "MtomExtendedService", 
                  wsdlLocation = "Soap12MtomUtf8.wsdl",
                  targetNamespace = "http://tempuri.org/") 
public class MtomExtendedService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "MtomExtendedService");
    public final static QName CustomBindingIMtomExtendedContract = new QName("http://tempuri.org/", "CustomBinding_IMtomExtendedContract");
    static {
        URL url = MtomExtendedService.class.getResource("Soap12MtomUtf8.wsdl");
        if (url == null) {
            url = MtomExtendedService.class.getClassLoader().getResource("Soap12MtomUtf8.wsdl");
        } 
        if (url == null) {
            java.util.logging.Logger.getLogger(MtomExtendedService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "Soap12MtomUtf8.wsdl");
        }       
        WSDL_LOCATION = url;
    }

    public MtomExtendedService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public MtomExtendedService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public MtomExtendedService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MtomExtendedService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MtomExtendedService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public MtomExtendedService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns IMtomExtendedContract
     */
    @WebEndpoint(name = "CustomBinding_IMtomExtendedContract")
    public IMtomExtendedContract getCustomBindingIMtomExtendedContract() {
        return super.getPort(CustomBindingIMtomExtendedContract, IMtomExtendedContract.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IMtomExtendedContract
     */
    @WebEndpoint(name = "CustomBinding_IMtomExtendedContract")
    public IMtomExtendedContract getCustomBindingIMtomExtendedContract(WebServiceFeature... features) {
        return super.getPort(CustomBindingIMtomExtendedContract, IMtomExtendedContract.class, features);
    }

}
