/*
 * JBoss, Home of Professional Open Source.
 * Copyright 2013, Red Hat Middleware LLC, and individual contributors
 * as indicated by the @author tags. See the copyright.txt file in the
 * distribution for a full listing of individual contributors.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
 */
package org.jboss.test.ws.jaxws.bp20.wsa.test1197;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.jws.soap.SOAPBinding;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;

/**
 * This class was generated by Apache CXF 2.8.0-SNAPSHOT (1451528)
 * 2013-05-27T16:50:38.473+08:00
 * Generated source version: 2.8.0-SNAPSHOT
 * 
 */
@WebService(targetNamespace = "http://example.org/signature", name = "SignatureDocumentLiteral")
@XmlSeeAlso({ObjectFactory.class})
@SOAPBinding(parameterStyle = SOAPBinding.ParameterStyle.BARE)
public interface SignatureDocumentLiteral {

    @WebResult(name = "SignatureOut", targetNamespace = "http://example.org/signature", partName = "SignatureOut")
    @Action(input = "http://example.org/action/SignatureInAlternate", output = "http://example.org/action/SignatureOutAlternate")
    @WebMethod(operationName = "Sign2", action = "http://example.org/action/SignatureInAlternate")
    public java.lang.String sign2(
        @WebParam(partName = "SignatureIn", name = "SignatureIn", targetNamespace = "http://example.org/signature")
        java.lang.String signatureIn
    );

    @WebResult(name = "SignatureOut", targetNamespace = "http://example.org/signature", partName = "SignatureOut")
    @Action(input = "http://example.org/action/SignatureInAlternateEmpty", output = "http://example.org/action/SignatureOutAlternateEmpty")
    @WebMethod(operationName = "Sign4", action = "http://example.org/action/SignatureInAlternateEmpty")
    public java.lang.String sign4();

    @WebResult(name = "SignatureOut", targetNamespace = "http://example.org/signature", partName = "SignatureOut")
    @Action(input = "http://example.org/action/SignatureInEmpty", output = "http://example.org/action/SignatureOutEmpty")
    @WebMethod(operationName = "Sign3", action = "http://example.org/action/SignatureInEmpty")
    public java.lang.String sign3();

    @WebResult(name = "SignatureOut", targetNamespace = "http://example.org/signature", partName = "SignatureOut")
    @Action(input = "http://example.org/action/SignatureInMultipart", output = "http://example.org/action/SignatureOutMultipart")
    @WebMethod(operationName = "Sign6", action = "http://example.org/action/SignatureInMultipart")
    public java.lang.String sign6(
        @WebParam(partName = "parameters", name = "SignatureInMultipartMessage", targetNamespace = "http://example.org/signature")
        SignatureInMultipartMessage parameters
    );

    @WebResult(name = "SignatureOut", targetNamespace = "http://example.org/signature", partName = "SignatureOut")
    @Action(input = "http://example.org/action/SignatureIn", output = "http://example.org/action/SignatureOut")
    @WebMethod(operationName = "Sign1", action = "http://example.org/action/SignatureIn")
    public java.lang.String sign1(
        @WebParam(partName = "SignatureIn", name = "SignatureIn", targetNamespace = "http://example.org/signature")
        java.lang.String signatureIn
    );

    @Action(input = "http://example.org/action/SignatureEmptyPartIn", output = "http://example.org/action/SignatureEmptyPartOut")
    @WebMethod(operationName = "Sign5", action = "http://example.org/action/SignatureEmptyPartIn")
    public void sign5();

    @WebResult(name = "SignatureOutHeaderMember", targetNamespace = "http://example.org/signature", partName = "SignatureOutHeaderMember")
    @Action(input = "http://example.org/action/SignatureHeaderIn", output = "http://example.org/action/SignatureHeaderReply", fault = {@FaultAction(className = SignatureDocumentLiteralSign7SignatureHeaderFaultFaultMessage.class, value = "http://example.org/action/SignatureHeaderFault")})
    @WebMethod(operationName = "Sign7", action = "http://example.org/action/SignatureHeaderIn")
    public java.lang.String sign7(
        @WebParam(partName = "SignatureInHeaderMember", name = "SignatureInHeaderMember", targetNamespace = "http://example.org/signature")
        java.lang.String signatureInHeaderMember,
        @WebParam(partName = "HeaderText", mode = WebParam.Mode.INOUT, name = "SignatureOutHeader", targetNamespace = "http://example.org/signature", header = true)
        javax.xml.ws.Holder<java.lang.String> headerText
    ) throws SignatureDocumentLiteralSign7SignatureHeaderFaultFaultMessage;
}
